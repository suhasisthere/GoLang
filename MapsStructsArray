package main

import "fmt"

type person struct {
	name string
	age  int
}

func main() {
	a := 3
	fmt.Println("Value of a is ", callFactorial(a))

	var myArr [10]int
	fmt.Println("myAr is ", myArr)

	var my2dArr [3][3]int
	fmt.Println("my2darray is ", my2dArr)

	my2dArr[1][2] = 222
	fmt.Println("my2darray is ", my2dArr)

	myLoopArr := [5]int{4, 5, 6, 7, 8}
	lenArr := len(myLoopArr)
	for i := 0; i < lenArr; i++ {
		fmt.Println(myLoopArr[i])
	}

	//===========STRUCTS==========================
	//=====================================
	//=====================================
	//different ways of declaring structs
	bob := person{"suhas", 32}
	fmt.Println("bob is ", bob)

	alice := person{name: "alice", age: 21}
	fmt.Println("alice is ", alice)

	//===========MAPS=======================
	//=====================================
	myMap := make(map[string]int) //[string]==>data type of key    int is the data ype of integer
	fmt.Println("Map is ", myMap)
	//declaring maps
	myMap["key1"] = 10
	myMap["key2"] = 20
	fmt.Println("Map is ", myMap)
}

//calling recursive function
func callFactorial(a int) int {
	if a == 0 {
		return 1
	}
	return a * callFactorial(a-1)

}
